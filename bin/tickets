#!/usr/bin/env node

var program = require('commander'),
  chalk = require('chalk');

var tickets = require('../lib/tickets'),
  constants = require('../lib/constants');

program.description('Tickets for Titanium')
  .version(require('../package.json').version, '-v, --version')
  .option('-d, --dir <value>', 'directory to search in [default: ' + chalk.cyan(constants.opts.dir) + ']')
  .option('-e, --extensions <items>', 'comma-separated list of file extensions or ' + chalk.cyan('+') + ' for all [default: ' + chalk.cyan(constants.opts.extensions.join(',')) + ']]', function(val) {
    return (val === '+') ? val : val.split(',');
  })
  .option('-k, --keys <items>', 'comma-separated list of JIRA project keys or ' + chalk.cyan('+') + ' for all [default: ' + chalk.cyan(constants.opts.keys.join(',')) + ']', function(val) {
    return (val === '+') ? val : val.split(',');
  })
  .option('-j, --jira <value>', 'url of the JIRA install to query [default: ' + chalk.cyan(constants.opts.jira) + ']', function(val){
    if (val.indexOf(';') > 0){
      var jiras = [];

      // user:pass@http://jira.company.com:ALOY,TIMOB;
      val.spilt(';').forEach(function(jira){
        var jcfg = {};

        if (jira.indexOf('@') > -1){
          var auth = jira.split('@')[0].split(':');
          jcfg['username'] = auth[0];
          jcfg['password'] = auth[1];

          jira = jira.slice(jira.indexOf('@') + 1);
        }

        if (jira.indexOf(':') > -1){
          jcfg['url'] = jira.split(':')[0];
          jcfg['keys'] = jira.split(':')[1].split(',');
        } else {
          jcfg['url'] = jira;
        }

        jiras.push(jcfg);
      });

      return jiras;
    }

    return val;
  })
  .option('-u, --username <value>', 'optional username to login to JIRA')
  .option('-p, --password <value>', 'optional password to login to JIRA');

program.parse(process.argv);

tickets(program);
